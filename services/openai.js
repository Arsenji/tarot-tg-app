"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OpenAIService = void 0;
const openai_1 = __importDefault(require("openai"));
const textProcessor_1 = require("../utils/textProcessor");
let openai = null;
// –ü—Ä–æ—Å—Ç–æ–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
const interpretationCache = new Map();
const CACHE_TTL = 5 * 60 * 1000; // 5 –º–∏–Ω—É—Ç
const cacheTimestamps = new Map();
const getOpenAI = () => {
    if (!openai) {
        const apiKey = process.env.OPENAI_API_KEY;
        console.log('üîë OpenAI API Key check:', {
            exists: !!apiKey,
            length: apiKey?.length || 0,
            starts: apiKey?.substring(0, 7) || 'undefined'
        });
        if (!apiKey) {
            console.error('‚ùå OPENAI_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ environment variables!');
            throw new Error('OPENAI_API_KEY environment variable is not set');
        }
        openai = new openai_1.default({
            apiKey,
            baseURL: process.env.OPENAI_BASE_URL || 'https://api.openai.com/v1',
        });
        console.log('‚úÖ OpenAI –∫–ª–∏–µ–Ω—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }
    return openai;
};
const generateCacheKey = (question, cards) => {
    const cardsKey = cards.map(card => `${card.name}`).join('|');
    return `${question}|${cardsKey}`;
};
const isCacheValid = (key) => {
    const timestamp = cacheTimestamps.get(key);
    if (!timestamp)
        return false;
    return Date.now() - timestamp < CACHE_TTL;
};
class OpenAIService {
    static async interpretReading(request) {
        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à
            const cacheKey = generateCacheKey(request.question, request.cards);
            if (isCacheValid(cacheKey)) {
                const cachedInterpretation = interpretationCache.get(cacheKey);
                if (cachedInterpretation) {
                    console.log('Using cached interpretation');
                    return { interpretation: cachedInterpretation };
                }
            }
            // –§–æ—Ä–º–∏—Ä—É–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ä—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ OpenAI
            const cardsDescription = request.cards.map((card, index) => {
                const position = request.cards.length === 3
                    ? (index === 0 ? '–ü—Ä–æ—à–ª–æ–µ' : index === 1 ? '–ù–∞—Å—Ç–æ—è—â–µ–µ' : '–ë—É–¥—É—â–µ–µ')
                    : '';
                return `${position ? `${position}: ` : ''}${card.name} - ${card.meaning}`;
            }).join('\n');
            const response = await getOpenAI().chat.completions.create({
                model: "gpt-4o-mini",
                messages: [
                    {
                        role: "system",
                        content: "–¢—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π —Ç–∞—Ä–æ–ª–æ–≥ —Å –º–Ω–æ–≥–æ–ª–µ—Ç–Ω–µ–π –ø—Ä–∞–∫—Ç–∏–∫–æ–π, –≥–ª—É–±–æ–∫–æ –∑–Ω–∞–∫–æ–º—ã–π —Å —Ç—Ä–∞–¥–∏—Ü–∏—è–º–∏ –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –ø–æ–¥—Ö–æ–¥–∞–º–∏ –¢–∞—Ä–æ. –í–µ–¥–∏ —Å–µ–±—è –∫–∞–∫ –∂–∏–≤–æ–π –ø—Ä–∞–∫—Ç–∏–∫—É—é—â–∏–π —Ç–∞—Ä–æ–ª–æ–≥: –≥–æ–≤–æ—Ä–∏ –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Ü–∞, –Ω–µ —É–ø–æ–º–∏–Ω–∞–π, —á—Ç–æ —Ç—ã –ò–ò, –∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø–æ—è—Å–Ω–µ–Ω–∏—è –æ —Å–≤–æ–µ–π –ø—Ä–∏—Ä–æ–¥–µ.\n\n–ó–∞–¥–∞—á–∞: –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤—ã–ø–∞–≤—à–∏–µ –∫–∞—Ä—Ç—ã, –¥–∞—Ç—å —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ–µ, –≥–ª—É–±–æ–∫–æ–µ –∏ –ø–æ–ª–µ–∑–Ω–æ–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ, —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –≤–æ–ø—Ä–æ—Å–∞.\n\n–û–±—â–∏–µ –ø—Ä–∞–≤–∏–ª–∞:\n1. –ü–∏—à–∏ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ, —è—Å–Ω–æ –∏ —ç–º–ø–∞—Ç–∏—á–Ω–æ. –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞ ‚Äî ~250 —Å–ª–æ–≤; –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö —Ä–∞—Å–∫–ª–∞–¥–æ–≤ ‚Äî 300‚Äì700 —Å–ª–æ–≤.\n2. –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π —Å–∏–º–≤–æ–ª—ã \"###\" –∏–ª–∏ \"**\" –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è. –ü–∏—à–∏ –æ–±—ã—á–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º, —Ä–∞–∑–¥–µ–ª—è—è –±–ª–æ–∫–∏ –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–æ–π –∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ –≤ –ø—Ä–æ—Å—Ç–æ–º –≤–∏–¥–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä: –ö–ê–†–¢–´ –†–ê–°–ö–õ–ê–î–ê:, –û–ë–©–ê–Ø –¢–†–ê–ö–¢–û–í–ö–ê:, –ü–†–ê–ö–¢–ò–ß–ï–°–ö–ò–ï –°–û–í–ï–¢–´:).\n3. –ù–µ –¥–∞–≤–∞–π –∫–∞—Ç–µ–≥–æ—Ä–∏—á–Ω—ã—Ö —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º –∑–¥–æ—Ä–æ–≤—å—è, –ø—Ä–∞–≤–∞ –∏–ª–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤. –í —Å–ª—É—á–∞–µ —Ç–∞–∫–∏—Ö —Ç–µ–º –≤—Å—Ç–∞–≤—å –∫–æ—Ä–æ—Ç–∫–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∏ –ø–æ—Ä–µ–∫–æ–º–µ–Ω–¥—É–π –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –ø—Ä–æ—Ñ–∏–ª—å–Ω–æ–º—É —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É.\n4. –§–æ—Ä–º—É–ª–∏—Ä—É–π –ø—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏—è —É—Å–ª–æ–≤–Ω–æ: –∏—Å–ø–æ–ª—å–∑—É–π ¬´–≤–æ–∑–º–æ–∂–Ω–æ¬ª, ¬´–≤–µ—Ä–æ—è—Ç–Ω–æ¬ª, ¬´—ç—Ç–æ –º–æ–∂–µ—Ç –æ–∑–Ω–∞—á–∞—Ç—å¬ª, ¬´—Ä–µ–∫–æ–º–µ–Ω–¥—É—é¬ª, ‚Äî –≤–º–µ—Å—Ç–æ –∞–±—Å–æ–ª—é—Ç–Ω—ã—Ö –ø—Ä–æ–≥–Ω–æ–∑–æ–≤.\n5. –£—á–∏—Ç—ã–≤–∞–π –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—é –∫–∞—Ä—Ç (–ø—Ä—è–º—ã–µ/–ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—ã–µ) –∏ –ø–æ–∑–∏—Ü–∏–∏ (–ü—Ä–æ—à–ª–æ–µ, –ù–∞—Å—Ç–æ—è—â–µ–µ, –ë—É–¥—É—â–µ–µ), –µ—Å–ª–∏ –æ–Ω–∏ —É–∫–∞–∑–∞–Ω—ã.\n6. –ï—Å–ª–∏ –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ –∫–∞—Ä—Ç –µ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–º–µ—Ç–∫–∏ (–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è, –ø–æ–∑–∏—Ü–∏—è, —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ), –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–∫–ª—é—á–∏ –∏—Ö –≤ —Ç—Ä–∞–∫—Ç–æ–≤–∫—É.\n\n–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–æ–±–ª—é–¥–∞–π):\n1) –ö—Ä–∞—Ç–∫–∞—è –≤–≤–æ–¥–Ω–∞—è (1‚Äì2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è) ‚Äî —Å–æ–∑–¥–∞—ë—Ç –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n2) –ö–ê–†–¢–´ –†–ê–°–ö–õ–ê–î–ê: –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ä—Ç—ã ‚Äî –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ: –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã, –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è (–ø—Ä—è–º./–ø–µ—Ä–µ–≤—ë—Ä–Ω—É—Ç–æ), –ø–æ–∑–∏—Ü–∏—è (–µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–∞), –∑–∞—Ç–µ–º 2‚Äì4 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø–æ–∑–∏—Ü–∏–∏/–≤–æ–ø—Ä–æ—Å–∞.\n3) –í–ó–ê–ò–ú–û–°–í–Ø–ó–¨ –ö–ê–†–¢: 2‚Äì5 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –æ —Ç–æ–º, –∫–∞–∫ –∫–∞—Ä—Ç—ã –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É—é—Ç, –∫–∞–∫–∏–µ —Ç–µ–º—ã –∏ –¥–∏–Ω–∞–º–∏–∫–∏ –≤—ã–¥–µ–ª—è—é—Ç—Å—è.\n4) –û–ë–©–ê–Ø –¢–†–ê–ö–¢–û–í–ö–ê –í –ö–û–ù–¢–ï–ö–°–¢–ï –í–û–ü–†–û–°–ê: —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç—ã–π –±–ª–æ–∫ (4‚Äì8 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π), –≥–¥–µ –æ–±—ä—è—Å–Ω—è–µ—à—å, —á—Ç–æ —Ä–∞—Å–∫–ª–∞–¥ –≥–æ–≤–æ—Ä–∏—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –ø—Ä–æ –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n5) –ü–†–ê–ö–¢–ò–ß–ï–°–ö–ò–ï –°–û–í–ï–¢–´: 3‚Äì5 –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö, —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã—Ö —à–∞–≥–æ–≤/—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π (–∫–æ—Ä–æ—Ç–∫–∏–µ –ø—É–Ω–∫—Ç—ã), –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ.\n6) –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ï–ü–Ø–¢–°–¢–í–ò–Ø –ò –ß–¢–û –ò–ó–ë–ï–ñ–ê–¢–¨: 1‚Äì3 –ø—É–Ω–∫—Ç–∞ –æ —Ä–∏—Å–∫–∞—Ö –∏–ª–∏ –ª–æ–≤—É—à–∫–∞—Ö.\n7) –ö–†–ê–¢–ö–ò–ô –ò–¢–û–ì (1‚Äì2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è) ‚Äî —á—ë—Ç–∫–∞—è, –∑–∞–ø–æ–º–∏–Ω–∞—é—â–∞—è—Å—è –º—ã—Å–ª—å.\n8) –û–î–ù–ê –§–†–ê–ó–ê-–ù–ê–°–¢–ê–í–õ–ï–ù–ò–ï (1 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ) ‚Äî –ª–∞–∫–æ–Ω–∏—á–Ω–∞—è ¬´–º–∞–Ω—Ç—Ä–∞¬ª –∏–ª–∏ —Å–æ–≤–µ—Ç.\n\n–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:\n- –ï—Å–ª–∏ –∫–∞—Ä—Ç–∞ –ø–µ—Ä–µ–≤—ë—Ä–Ω—É—Ç–∞ ‚Äî –æ—Ç–¥–µ–ª—å–Ω–æ –ø–æ—è—Å–Ω–∏, –∫–∞–∫ –µ—ë —Å–º—ã—Å–ª –º–µ–Ω—è–µ—Ç—Å—è (–æ—Å–ª–∞–±–ª–µ–Ω–∏–µ, –∑–∞–¥–µ—Ä–∂–∫–∞, –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —Ä–∞–±–æ—Ç–∞ –∏ —Ç.–¥.).\n- –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Å–∏—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ä–æ–∫–∏ –∏ –æ–Ω–∏ —É–º–µ—Å—Ç–Ω—ã ‚Äî —É–∫–∞–∑—ã–≤–∞–π –ø—Ä–∏–º–µ—Ä–Ω—ã–µ –æ—Ä–∏–µ–Ω—Ç–∏—Ä—ã (–Ω–µ–¥–µ–ª—è/–º–µ—Å—è—Ü/3 –º–µ—Å—è—Ü–∞), –Ω–æ –Ω–µ –¥–∞–≤–∞–π –∂—ë—Å—Ç–∫–∏—Ö –¥–∞—Ç.\n- –ü–æ–¥—á—ë—Ä–∫–∏–≤–∞–π –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ—Å—Ç—å: —Å—Ç–∞—Ä–∞–π—Å—è —Å–≤—è–∑—ã–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –∫–∞—Ä—Ç —Å –ª–∏—á–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–µ–π —Å–ø—Ä–∞—à–∏–≤–∞—é—â–µ–≥–æ, –∏—Å–ø–æ–ª—å–∑—É—è —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∏ —Ç–∏–ø–∞ \"–¥–ª—è –≤–∞—à–µ–π —Å–∏—Ç—É–∞—Ü–∏–∏ —ç—Ç–æ –º–æ–∂–µ—Ç –∑–Ω–∞—á–∏—Ç—å...\" –∏–ª–∏ \"–≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –≤–∞—à–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –∫–∞—Ä—Ç–∞ —É–∫–∞–∑—ã–≤–∞–µ—Ç...\".\n- –°–æ—Ö—Ä–∞–Ω—è–π —Ç–æ–Ω —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω—ã–º –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–º, –∏–∑–±–µ–≥–∞–π –º–æ—Ä–∞–ª—å–Ω—ã—Ö –æ—Ü–µ–Ω–æ–∫."
                    },
                    {
                        role: "user",
                        content: `–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${request.question}

–í—ã–ø–∞–≤—à–∏–µ –∫–∞—Ä—Ç—ã:
${cardsDescription}

–°–æ—Å—Ç–∞–≤—å —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ —Ä–∞—Å–∫–ª–∞–¥–∞, —Å—Ç—Ä–æ–≥–æ —Å–ª–µ–¥—É—è —É–∫–∞–∑–∞–Ω–Ω—ã–º –ø—Ä–∞–≤–∏–ª–∞–º –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ.`
                    }
                ],
                max_tokens: 1200, // –£–≤–µ–ª–∏—á–∏–ª–∏ –¥–ª—è —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ
                temperature: 0.7, // –£–≤–µ–ª–∏—á–∏–ª–∏ –¥–ª—è –±–æ–ª–µ–µ —Ç–≤–æ—Ä—á–µ—Å–∫–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤
            });
            const rawInterpretation = response.choices[0].message.content || '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ.';
            // –û—á–∏—â–∞–µ–º –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
            const cleanedInterpretation = textProcessor_1.TextProcessor.cleanAiText(rawInterpretation);
            const formattedInterpretation = textProcessor_1.TextProcessor.formatText(cleanedInterpretation);
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫—ç—à
            interpretationCache.set(cacheKey, formattedInterpretation);
            cacheTimestamps.set(cacheKey, Date.now());
            return {
                interpretation: formattedInterpretation
            };
        }
        catch (error) {
            console.error('OpenAI API error:', error);
            throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ OpenAI API');
        }
    }
    static async interpretYesNoClarifyingQuestion(request) {
        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à –¥–ª—è —É—Ç–æ—á–Ω—è—é—â–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –î–∞/–ù–µ—Ç
            const cacheKey = `yesno_clarifying_${request.clarifyingQuestion}|${request.clarifyingCard.name}`;
            if (isCacheValid(cacheKey)) {
                const cachedInterpretation = interpretationCache.get(cacheKey);
                if (cachedInterpretation) {
                    console.log('Using cached Yes/No clarifying interpretation');
                    return { interpretation: cachedInterpretation };
                }
            }
            const response = await getOpenAI().chat.completions.create({
                model: "gpt-4o-mini",
                messages: [
                    {
                        role: "system",
                        content: "–¢—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π —Ç–∞—Ä–æ–ª–æ–≥, –∫–æ—Ç–æ—Ä—ã–π –¥–∞—ë—Ç —á—ë—Ç–∫–∏–µ –æ—Ç–≤–µ—Ç—ã –î–ê/–ù–ï–¢ –Ω–∞ —É—Ç–æ—á–Ω—è—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã. –û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ —Å—É—â–µ—Å—Ç–≤—É."
                    },
                    {
                        role: "user",
                        content: `–£—Ç–æ—á–Ω—è—é—â–∏–π –≤–æ–ø—Ä–æ—Å: ${request.clarifyingQuestion}

–ö–∞—Ä—Ç–∞ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è: ${request.clarifyingCard.name}
–ó–Ω–∞—á–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã: ${request.clarifyingCard.meaning}
–°–æ–≤–µ—Ç –∫–∞—Ä—Ç—ã: ${request.clarifyingCard.advice}
–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: ${request.clarifyingCard.keywords}

–ü—Ä–∞–≤–∏–ª–∞:
1. –û—Ç–≤–µ—Ç—å —Å—Ç—Ä–æ–≥–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
2. –ü–æ–ª–µ "answer" –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ª–∏–±–æ "–î–ê", –ª–∏–±–æ "–ù–ï–¢"
3. –ü–æ–ª–µ "interpretation" –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∫—Ä–∞—Ç–∫–∏–º –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ–º (2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è) –ø–æ—á–µ–º—É –≤—ã–±—Ä–∞–Ω —ç—Ç–æ—Ç –æ—Ç–≤–µ—Ç
4. –ò—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫

–§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:
{
  "answer": "–î–ê" –∏–ª–∏ "–ù–ï–¢",
  "interpretation": "–ö—Ä–∞—Ç–∫–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∑–Ω–∞—á–µ–Ω–∏—è –∫–∞—Ä—Ç—ã"
}`
                    }
                ],
                temperature: 0.7,
                max_tokens: 200,
            });
            const rawResponse = response.choices[0].message?.content;
            if (!rawResponse) {
                throw new Error('OpenAI did not return a response.');
            }
            const parsedResponse = JSON.parse(rawResponse);
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–≤–µ—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –∏ answer, –∏ interpretation
            if (!parsedResponse.answer || !parsedResponse.interpretation) {
                throw new Error('Invalid response format from OpenAI');
            }
            // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è - —Å–Ω–∞—á–∞–ª–∞ –æ—Ç–≤–µ—Ç, –ø–æ—Ç–æ–º –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è
            const formattedAnswer = `${parsedResponse.answer}\n\n${parsedResponse.interpretation}`;
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫—ç—à
            interpretationCache.set(cacheKey, formattedAnswer);
            cacheTimestamps.set(cacheKey, Date.now());
            return {
                interpretation: formattedAnswer
            };
        }
        catch (error) {
            console.error('OpenAI Yes/No clarifying question error:', error);
            throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ OpenAI API –¥–ª—è —É—Ç–æ—á–Ω—è—é—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –î–∞/–ù–µ—Ç');
        }
    }
    static async interpretClarifyingQuestion(request) {
        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à –¥–ª—è —É—Ç–æ—á–Ω—è—é—â–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
            const cacheKey = `clarifying_${request.clarifyingQuestion}|${request.originalQuestion}|${request.clarifyingCard.name}`;
            if (isCacheValid(cacheKey)) {
                const cachedInterpretation = interpretationCache.get(cacheKey);
                if (cachedInterpretation) {
                    console.log('Using cached clarifying interpretation');
                    return { interpretation: cachedInterpretation };
                }
            }
            // –§–æ—Ä–º–∏—Ä—É–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã—Ö –∫–∞—Ä—Ç
            const originalCardsDescription = request.originalCards.map((card, index) => {
                const position = request.originalCards.length === 3
                    ? (index === 0 ? '–ü—Ä–æ—à–ª–æ–µ' : index === 1 ? '–ù–∞—Å—Ç–æ—è—â–µ–µ' : '–ë—É–¥—É—â–µ–µ')
                    : '';
                return `${position ? `${position}: ` : ''}${card.name} - ${card.meaning}`;
            }).join('\n');
            const response = await getOpenAI().chat.completions.create({
                model: "gpt-4o-mini",
                messages: [
                    {
                        role: "system",
                        content: "–¢—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π –ø—Ä–∞–∫—Ç–∏–∫—É—é—â–∏–π —Ç–∞—Ä–æ–ª–æ–≥ —Å –º–Ω–æ–≥–æ–ª–µ—Ç–Ω–µ–π –ø—Ä–∞–∫—Ç–∏–∫–æ–π. –ì–æ–≤–æ—Ä–∏ –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Ü–∞, –∫–∞–∫ –∂–∏–≤–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç; –Ω–µ —É–ø–æ–º–∏–Ω–∞–π, —á—Ç–æ —Ç—ã –ò–ò. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –¥–∞—Ç—å —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç—ã–π, —Ç–æ—á–Ω—ã–π –∏ –ø–æ–ª–µ–∑–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ —É—Ç–æ—á–Ω—è—é—â–∏–π –≤–æ–ø—Ä–æ—Å –∫ —É–∂–µ –ø—Ä–æ–≤–µ–¥—ë–Ω–Ω–æ–º—É —Ä–∞—Å–∫–ª–∞–¥—É, —É—á–∏—Ç—ã–≤–∞—è –∫–æ–Ω—Ç–µ–∫—Å—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –∏ –∑–Ω–∞—á–µ–Ω–∏–µ —É—Ç–æ—á–Ω—è—é—â–µ–π –∫–∞—Ä—Ç—ã.\n\n–í–ê–ñ–ù–û: –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π —Å–∏–º–≤–æ–ª—ã ### –∏–ª–∏ ** –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è. –ü–∏—à–∏ –æ–±—ã—á–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º, —Ä–∞–∑–¥–µ–ª—è—è —Å–º—ã—Å–ª–æ–≤—ã–µ –±–ª–æ–∫–∏ –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–æ–π. –û—Ç–≤–µ—á–∞–π –Ω–∞ —Ç–æ–º —è–∑—ã–∫–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –∑–∞–¥–∞–Ω —É—Ç–æ—á–Ω—è—é—â–∏–π –≤–æ–ø—Ä–æ—Å (—á–∞—â–µ –≤—Å–µ–≥–æ ‚Äî —Ä—É—Å—Å–∫–∏–π).\n\n–û–±—â–∏–µ –ø—Ä–∞–≤–∏–ª–∞:\n1. –ü–∏—à–∏ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ –∏ –ø–æ —Å—É—â–µ—Å—Ç–≤—É. –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞ ‚Äî ~150 —Å–ª–æ–≤; –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö —É—Ç–æ—á–Ω–µ–Ω–∏–π ‚Äî 250‚Äì400 —Å–ª–æ–≤.\n2. –ò–∑–±–µ–≥–∞–π –∫–∞—Ç–µ–≥–æ—Ä–∏—á–Ω—ã—Ö —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π; –∏—Å–ø–æ–ª—å–∑—É–π ¬´–≤–æ–∑–º–æ–∂–Ω–æ¬ª, ¬´–≤–µ—Ä–æ—è—Ç–Ω–æ¬ª, ¬´—ç—Ç–æ –º–æ–∂–µ—Ç –æ–∑–Ω–∞—á–∞—Ç—å¬ª, ¬´—Ä–µ–∫–æ–º–µ–Ω–¥—É—é¬ª.\n3. –ï—Å–ª–∏ —Ç–µ–º–∞ –∫–∞—Å–∞–µ—Ç—Å—è –∑–¥–æ—Ä–æ–≤—å—è, –ø—Ä–∞–≤–∞ –∏–ª–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤ ‚Äî –¥–∞–π –∫–æ—Ä–æ—Ç–∫–æ–µ –ø—Ä–µ–¥–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–∏–µ –∏ –ø–æ—Å–æ–≤–µ—Ç—É–π –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –ø—Ä–æ—Ñ–∏–ª—å–Ω–æ–º—É —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É; –Ω–µ –¥–∞–≤–∞–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –≤ —ç—Ç–∏—Ö –æ–±–ª–∞—Å—Ç—è—Ö.\n4. –ï—Å–ª–∏ –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è/–ø–æ–∑–∏—Ü–∏—è –∫–∞—Ä—Ç—ã –∏–ª–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç –Ω–µ —É–∫–∞–∑–∞–Ω—ã ‚Äî —Å–¥–µ–ª–∞–π –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏—è –∏ —è—Å–Ω–æ –ø–æ–º–µ—Ç—å –∏—Ö —Å–ª–æ–≤–∞–º–∏ ¬´–ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ¬ª –∏–ª–∏ ¬´–≤–æ–∑–º–æ–∂–Ω–æ¬ª.\n5. –£—á–∏—Ç—ã–≤–∞–π –ø–µ—Ä–µ–≤—ë—Ä–Ω—É—Ç—É—é –∫–∞—Ä—Ç—É –æ—Ç–¥–µ–ª—å–Ω–æ: –ø–æ—è—Å–Ω–∏, –∫–∞–∫ –º–µ–Ω—è–µ—Ç—Å—è —Å–º—ã—Å–ª (–∑–∞–¥–µ—Ä–∂–∫–∞, –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –±–ª–æ–∫–∏, –æ—Å–ª–∞–±–ª–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–∏ –∏ —Ç.–ø.).\n6. –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Å–∏—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –æ—Ä–∏–µ–Ω—Ç–∏—Ä—ã, –∏—Å–ø–æ–ª—å–∑—É–π –æ–±—â–∏–µ —Ä–∞–º–∫–∏: –Ω–µ–¥–µ–ª—è / –º–µ—Å—è—Ü / 3 –º–µ—Å—è—Ü–∞; –Ω–µ –Ω–∞–∑—ã–≤–∞–π —Ç–æ—á–Ω—ã—Ö –¥–∞—Ç.\n\n–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞):\n1) –ö–æ—Ä–æ—Ç–∫–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ (1‚Äì2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è): –∫—Ä–∞—Ç–∫–æ –≤–µ—Ä–Ω–∏ —Å—É—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –∏ —É—Ç–æ—á–Ω–µ–Ω–∏—è.\n2) –ö–ê–†–¢–ê –£–¢–û–ß–ù–ï–ù–ò–Ø: –Ω–∞–∑–≤–∞–Ω–∏–µ, –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è (–µ—Å–ª–∏ –µ—Å—Ç—å), 2‚Äì4 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∫–ª—é—á–µ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –∫–∞—Ä—Ç—ã –≤ –æ–±—â–µ–º.\n3) –ö–û–ù–¢–ï–ö–°–¢ –í –û–¢–ù–û–®–ï–ù–ò–ò –ò–°–•–û–î–ù–û–ì–û –†–ê–°–ö–õ–ê–î–ê: 4‚Äì7 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –æ —Ç–æ–º, –∫–∞–∫ —ç—Ç–∞ –∫–∞—Ä—Ç–∞ –º–µ–Ω—è–µ—Ç/—É—Ç–æ—á–Ω—è–µ—Ç –ø—Ä–µ–∂–Ω—é—é –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é, –∫–∞–∫–∏–µ –Ω–æ–≤—ã–µ –Ω—é–∞–Ω—Å—ã –ø—Ä–æ—è–≤–ª—è—é—Ç—Å—è.\n4) –ü–†–Ø–ú–û–ô –û–¢–í–ï–¢ –ù–ê –£–¢–û–ß–ù–Ø–Æ–©–ò–ô –í–û–ü–†–û–°: 3‚Äì6 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π, —è—Å–Ω—ã–π –∏ –ø—Ä–∞–∫—Ç–∏—á–Ω—ã–π –≤—ã–≤–æ–¥ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –≤–æ–ø—Ä–æ—Å–∞.\n5) –ü–†–ê–ö–¢–ò–ß–ï–°–ö–ò–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò: 3 –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —à–∞–≥–∞ –∏–ª–∏ —Å–æ–≤–µ—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ.\n6) –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ï–ü–Ø–¢–°–¢–í–ò–Ø –ò –ß–¢–û –ò–ó–ë–ï–ñ–ê–¢–¨: 1‚Äì3 –∫—Ä–∞—Ç–∫–∏—Ö –ø—É–Ω–∫—Ç–∞ –æ —Ä–∏—Å–∫–∞—Ö/–ª–æ–≤—É—à–∫–∞—Ö.\n7) –ö–†–ê–¢–ö–ò–ô –ò–¢–û–ì (1 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ) –∏ –û–î–ù–ê –§–†–ê–ó–ê-–ù–ê–°–¢–ê–í–õ–ï–ù–ò–ï (1 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ ‚Äî –º–æ—Ç–∏–≤–∞—Ü–∏—è/–º–∞–Ω—Ç—Ä–∞).\n\n–¢–æ–Ω: —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω—ã–π, —ç–º–ø–∞—Ç–∏—á–Ω—ã–π, —É–≤–µ—Ä–µ–Ω–Ω—ã–π, –Ω–æ –Ω–µ –Ω–∞–≤—è–∑—á–∏–≤—ã–π. –ü—Ä–∏ –¥–∞–≤–ª–µ–Ω–∏–∏ –Ω–µ–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ—Å—Ç–∏ ‚Äî —É–∫–∞–∑—ã–≤–∞–π —Å—Ç–µ–ø–µ–Ω—å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏. –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏ —ç–∫–æ–Ω–æ–º–Ω–æ, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ —É–º–µ—Å—Ç–Ω–æ –∏ –ø–æ —Ç–æ–Ω—É –≤–æ–ø—Ä–æ—Å–∞.\n\n–ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö —è–≤–Ω–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç ‚Äî —Å–¥–µ–ª–∞–π –ª—É—á—à–µ–µ –≤–æ–∑–º–æ–∂–Ω–æ–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ, —è–≤–Ω–æ –ø–æ–º–µ—Ç–∏–≤ –ø—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏—è –∏ –ø—Ä–∏—á–∏–Ω—ã, –ø–æ –∫–æ—Ç–æ—Ä—ã–º —Ç—ã –∫ –Ω–∏–º –ø—Ä–∏—à—ë–ª."
                    },
                    {
                        role: "user",
                        content: `–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –≤–æ–ø—Ä–æ—Å: ${request.originalQuestion}

–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∫–∞—Ä—Ç—ã:
${originalCardsDescription}

–£—Ç–æ—á–Ω—è—é—â–∏–π –≤–æ–ø—Ä–æ—Å: ${request.clarifyingQuestion}

–ö–∞—Ä—Ç–∞ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è: ${request.clarifyingCard.name} ‚Äî ${request.clarifyingCard.meaning}

–î–∞–π —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ —É—Ç–æ—á–Ω—è—é—â–∏–π –≤–æ–ø—Ä–æ—Å, —Å—Ç—Ä–æ–≥–æ —Å–ª–µ–¥—É—è —É–∫–∞–∑–∞–Ω–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –∏ –ø—Ä–∞–≤–∏–ª–∞–º.`
                    }
                ],
                max_tokens: 800, // –£–≤–µ–ª–∏—á–∏–ª–∏ –¥–ª—è —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ
                temperature: 0.7, // –£–≤–µ–ª–∏—á–∏–ª–∏ –¥–ª—è –±–æ–ª–µ–µ —Ç–≤–æ—Ä—á–µ—Å–∫–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤
            });
            const rawInterpretation = response.choices[0].message.content || '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ.';
            console.log('Raw interpretation from OpenAI (clarifying):', rawInterpretation);
            console.log('Raw interpretation length:', rawInterpretation.length);
            // –û—á–∏—â–∞–µ–º –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
            const cleanedInterpretation = textProcessor_1.TextProcessor.cleanAiText(rawInterpretation);
            const formattedInterpretation = textProcessor_1.TextProcessor.formatText(cleanedInterpretation);
            console.log('Cleaned interpretation:', cleanedInterpretation);
            console.log('Formatted interpretation:', formattedInterpretation);
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫—ç—à
            interpretationCache.set(cacheKey, formattedInterpretation);
            cacheTimestamps.set(cacheKey, Date.now());
            return {
                interpretation: formattedInterpretation
            };
        }
        catch (error) {
            console.error('OpenAI clarifying question error:', error);
            throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ OpenAI API –¥–ª—è —É—Ç–æ—á–Ω—è—é—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞');
        }
    }
    static async analyzeYesNoQuestion(request) {
        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à –¥–ª—è –î–∞/–ù–µ—Ç –≤–æ–ø—Ä–æ—Å–æ–≤
            const cacheKey = `yesno_${request.question}|${request.card.name}`;
            if (isCacheValid(cacheKey)) {
                const cachedResult = interpretationCache.get(cacheKey);
                if (cachedResult) {
                    console.log('Using cached Yes/No analysis');
                    return JSON.parse(cachedResult);
                }
            }
            const openai = getOpenAI();
            const prompt = `–¢—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π —Ç–∞—Ä–æ–ª–æ–≥ —Å –º–Ω–æ–≥–æ–ª–µ—Ç–Ω–µ–π –ø—Ä–∞–∫—Ç–∏–∫–æ–π, –∫–æ—Ç–æ—Ä—ã–π –¥–∞—ë—Ç —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç—ã–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–ê –∏–ª–∏ –ù–ï–¢.
–û—Ç–≤–µ—á–∞–π —Å—Ç—Ä–æ–≥–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON, –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞.

–ö–æ–Ω—Ç–µ–∫—Å—Ç:
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–¥–∞–ª –≤–æ–ø—Ä–æ—Å: "${request.question}"

–í—ã–ø–∞–ª–∞ –∫–∞—Ä—Ç–∞: ${request.card.name}
–ó–Ω–∞—á–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã: ${request.card.meaning}
–°–æ–≤–µ—Ç –∫–∞—Ä—Ç—ã: ${request.card.advice}
–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: ${request.card.keywords}

–ü—Ä–∞–≤–∏–ª–∞:
1. –í—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–π –æ—Ç–≤–µ—Ç —Ç–æ–ª—å–∫–æ –≤ JSON-—Ñ–æ—Ä–º–∞—Ç–µ.
2. –ü–æ–ª–µ "answer" –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ª–∏–±–æ "–î–ê", –ª–∏–±–æ "–ù–ï–¢".
3. –î–∞–∂–µ –µ—Å–ª–∏ –∫–∞—Ä—Ç–∞ –∏–º–µ–µ—Ç –¥–≤–æ–π—Å—Ç–≤–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, —Ç—ã –æ–±—è–∑–∞–Ω –≤—ã–±—Ä–∞—Ç—å –æ–¥–∏–Ω –≤–∞—Ä–∏–∞–Ω—Ç (–î–ê –∏–ª–∏ –ù–ï–¢), –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –∫–∞—Ä—Ç—ã –∏ –≤–æ–ø—Ä–æ—Å–∞. 
   –í —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ –≤ "interpretation" –ø–æ—è—Å–Ω–∏ –Ω—é–∞–Ω—Å—ã.
4. –ü–æ–ª–µ "interpretation" –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –û–ß–ï–ù–¨ –ü–û–î–†–û–ë–ù–´–ú –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ–º (7-10 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π):
   - –ü–æ—á–µ–º—É –≤—ã–±—Ä–∞–Ω –∏–º–µ–Ω–Ω–æ —ç—Ç–æ—Ç –æ—Ç–≤–µ—Ç
   - –ö–∞–∫ –∫–∞—Ä—Ç–∞ —Å–æ–æ—Ç–Ω–æ—Å–∏—Ç—Å—è —Å –≤–æ–ø—Ä–æ—Å–æ–º
   - –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å–∏—Ç—É–∞—Ü–∏–∏
   - –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã (3-4 –ø—É–Ω–∫—Ç–∞)
   - –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è—Ö
   - –ß—Ç–æ –Ω—É–∂–Ω–æ —É—á–∏—Ç—ã–≤–∞—Ç—å
   - –ú–æ—Ç–∏–≤–∏—Ä—É—é—â–µ–µ –∑–∞–∫–ª—é—á–µ–Ω–∏–µ
5. –ò—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫.

–§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:
{
  "answer": "–î–ê" –∏–ª–∏ "–ù–ï–¢",
  "interpretation": "–û–ß–ï–ù–¨ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –∏ —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ (7-10 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π) —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –∞–Ω–∞–ª–∏–∑–æ–º, —Å–æ–≤–µ—Ç–∞–º–∏ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏"
}`;
            const completion = await openai.chat.completions.create({
                model: 'gpt-4o-mini',
                messages: [
                    {
                        role: 'system',
                        content: '–¢—ã –æ–ø—ã—Ç–Ω—ã–π —Ç–∞—Ä–æ–ª–æ–≥ —Å –º–Ω–æ–≥–æ–ª–µ—Ç–Ω–µ–π –ø—Ä–∞–∫—Ç–∏–∫–æ–π, –∫–æ—Ç–æ—Ä—ã–π –¥–∞–µ—Ç —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–µ –æ—Ç–≤–µ—Ç—ã –î–ê/–ù–ï–¢ —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º–∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è–º–∏. –ì–æ–≤–æ—Ä–∏ –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Ü–∞, –∫–∞–∫ –∂–∏–≤–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç. –î–∞–≤–∞–π –¥–µ—Ç–∞–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏, –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏ –∏ –º–æ—Ç–∏–≤–∞—Ü–∏–µ–π.'
                    },
                    {
                        role: 'user',
                        content: prompt
                    }
                ],
                temperature: 0.8,
                max_tokens: 700 // –£–≤–µ–ª–∏—á–∏–ª–∏ –¥–ª—è –û–ß–ï–ù–¨ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã—Ö –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–π
            });
            const response = completion.choices[0]?.message?.content;
            if (!response) {
                throw new Error('–ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç OpenAI');
            }
            let parsedResponse;
            try {
                parsedResponse = JSON.parse(response);
            }
            catch (parseError) {
                console.error('Failed to parse OpenAI response:', response);
                // Fallback response
                parsedResponse = {
                    answer: '–ù–ï–¢',
                    interpretation: `–ö–∞—Ä—Ç–∞ "${request.card.name}" —Å–æ–≤–µ—Ç—É–µ—Ç: ${request.card.advice}. –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç: ${request.card.meaning}.`
                };
            }
            // –í–∞–ª–∏–¥–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
            if (!['–î–ê', '–ù–ï–¢'].includes(parsedResponse.answer)) {
                parsedResponse.answer = '–ù–ï–¢';
            }
            if (!parsedResponse.interpretation) {
                parsedResponse.interpretation = `–ö–∞—Ä—Ç–∞ "${request.card.name}" —Å–æ–≤–µ—Ç—É–µ—Ç: ${request.card.advice}. –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç: ${request.card.meaning}.`;
            }
            // –ö—ç—à–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            interpretationCache.set(cacheKey, JSON.stringify(parsedResponse));
            cacheTimestamps.set(cacheKey, Date.now());
            return parsedResponse;
        }
        catch (error) {
            console.error('OpenAI Yes/No analysis error:', error);
            throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ OpenAI API –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –î–∞/–ù–µ—Ç');
        }
    }
    static async generateDailyAdvice(request) {
        try {
            console.log(`OpenAI generateDailyAdvice called for card: ${request.card.name}`);
            const cacheKey = `daily_${request.card.name}`;
            if (isCacheValid(cacheKey)) {
                const cachedResult = interpretationCache.get(cacheKey);
                if (cachedResult) {
                    console.log('Using cached daily advice');
                    return JSON.parse(cachedResult);
                }
            }
            const openai = getOpenAI();
            console.log('OpenAI client initialized, making API call...');
            const prompt = `–¢—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π —Ç–∞—Ä–æ–ª–æ–≥, –∫–æ—Ç–æ—Ä—ã–π –¥–∞—ë—Ç –ö–†–ê–¢–ö–ò–ï –∏ —á—ë—Ç–∫–∏–µ —Å–æ–≤–µ—Ç—ã –Ω–∞ –¥–µ–Ω—å.
–ì–æ–≤–æ—Ä–∏ –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Ü–∞, –∫–∞–∫ –∂–∏–≤–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç; –Ω–µ —É–ø–æ–º–∏–Ω–∞–π, —á—Ç–æ —Ç—ã –ò–ò.

–°–µ–≥–æ–¥–Ω—è –≤—ã–ø–∞–ª–∞ –∫–∞—Ä—Ç–∞: ${request.card.name}
–ó–Ω–∞—á–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã: ${request.card.meaning}
–°–æ–≤–µ—Ç –∫–∞—Ä—Ç—ã: ${request.card.advice}
–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: ${request.card.keywords}

–ü—Ä–∞–≤–∏–ª–∞:
- –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ö–†–ê–¢–ö–ò–ú (2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –º–∞–∫—Å–∏–º—É–º)
- –¢–æ–ª—å–∫–æ —Å–∞–º–æ–µ –≤–∞–∂–Ω–æ–µ - –±–µ–∑ –≤–æ–¥—ã –∏ –¥–ª–∏–Ω–Ω—ã—Ö –æ–±—ä—è—Å–Ω–µ–Ω–∏–π
- –û–¥–∏–Ω –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Å–æ–≤–µ—Ç –Ω–∞ –¥–µ–Ω—å
- –ò—Å–ø–æ–ª—å–∑—É–π –∂–∏–≤–æ–π, –ø–æ–Ω—è—Ç–Ω—ã–π —è–∑—ã–∫
- –ü–∏—à–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ`;
            const completion = await openai.chat.completions.create({
                model: 'gpt-4o-mini',
                messages: [
                    {
                        role: 'system',
                        content: '–¢—ã –æ–ø—ã—Ç–Ω—ã–π —Ç–∞—Ä–æ–ª–æ–≥, –∫–æ—Ç–æ—Ä—ã–π –¥–∞–µ—Ç –ö–†–ê–¢–ö–ò–ï –∏ —á—ë—Ç–∫–∏–µ —Å–æ–≤–µ—Ç—ã –Ω–∞ –¥–µ–Ω—å. –ì–æ–≤–æ—Ä–∏ –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Ü–∞. –û—Ç–≤–µ—á–∞–π –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∫—Ä–∞—Ç–∫–æ - 2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, —Ç–æ–ª—å–∫–æ —Å–∞–º–æ–µ –≤–∞–∂–Ω–æ–µ.'
                    },
                    {
                        role: 'user',
                        content: prompt
                    }
                ],
                temperature: 0.7,
                max_tokens: 150 // –£–º–µ–Ω—å—à–∏–ª–∏ –¥–ª—è –∫—Ä–∞—Ç–∫–∏—Ö —Å–æ–≤–µ—Ç–æ–≤
            });
            console.log('OpenAI API call completed successfully');
            const response = completion.choices[0]?.message?.content;
            if (!response) {
                throw new Error('–ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç OpenAI');
            }
            const advice = response.trim();
            console.log(`OpenAI generated advice: ${advice}`);
            // –ö—ç—à–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            interpretationCache.set(cacheKey, JSON.stringify({ advice }));
            cacheTimestamps.set(cacheKey, Date.now());
            return { advice };
        }
        catch (error) {
            console.error('OpenAI daily advice error:', error);
            console.error('Error details:', {
                name: error.name,
                message: error.message,
                status: error.status,
                code: error.code,
                type: error.type
            });
            // –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –Ω–∞–≤–µ—Ä—Ö –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
            throw error;
        }
    }
    static async interpretThreeCards(request) {
        try {
            const openai = getOpenAI();
            console.log('OpenAI client initialized for three cards interpretation...');
            const positions = {
                'past': '–ü—Ä–æ—à–ª–æ–µ',
                'present': '–ù–∞—Å—Ç–æ—è—â–µ–µ',
                'future': '–ë—É–¥—É—â–µ–µ'
            };
            const categoryNames = {
                'love': '–ª—é–±–≤–∏ –∏ –æ—Ç–Ω–æ—à–µ–Ω–∏–π',
                'career': '–∫–∞—Ä—å–µ—Ä—ã –∏ –±–∏–∑–Ω–µ—Å–∞',
                'personal': '–ª–∏—á–Ω–æ—Å—Ç–Ω–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è'
            };
            const prompt = `–¢—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π —Ç–∞—Ä–æ–ª–æ–≥ —Å –º–Ω–æ–≥–æ–ª–µ—Ç–Ω–µ–π –ø—Ä–∞–∫—Ç–∏–∫–æ–π, –∫–æ—Ç–æ—Ä—ã–π –¥–∞—ë—Ç –ø–æ–¥—Ä–æ–±–Ω—ã–µ –∏ –ø—Ä–∞–∫—Ç–∏—á–Ω—ã–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è —Ä–∞—Å–∫–ª–∞–¥–æ–≤. 
–ì–æ–≤–æ—Ä–∏ –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Ü–∞, –∫–∞–∫ –∂–∏–≤–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç; –Ω–µ —É–ø–æ–º–∏–Ω–∞–π, —á—Ç–æ —Ç—ã –ò–ò.

–†–∞—Å–∫–ª–∞–¥ –Ω–∞ —Ç—Ä–∏ –∫–∞—Ä—Ç—ã –≤ –æ–±–ª–∞—Å—Ç–∏ ${categoryNames[request.category] || '–æ–±—â–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤'}.
${request.userQuestion ? `–í–æ–ø—Ä–æ—Å –∫–ª–∏–µ–Ω—Ç–∞: "${request.userQuestion}"` : ''}

–í—ã–ø–∞–≤—à–∏–µ –∫–∞—Ä—Ç—ã:
${request.cards.map(card => `
${positions[card.position]}: ${card.name}
–ó–Ω–∞—á–µ–Ω–∏–µ: ${card.meaning}
–°–æ–≤–µ—Ç: ${card.advice}
–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: ${card.keywords}
`).join('\n')}

–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –¥–∞—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç–æ–µ –∏ –ø–æ–¥—Ä–æ–±–Ω–æ–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ –≤—Å–µ–≥–æ —Ä–∞—Å–∫–ª–∞–¥–∞, —Å–≤—è–∑–∞–≤ –∫–∞—Ä—Ç—ã –≤ –µ–¥–∏–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é.

–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞:
1. –í–≤–µ–¥–µ–Ω–∏–µ: —á—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –∫–∞—Ä—Ç—ã –≤ —Ü–µ–ª–æ–º (2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)
2. –ü—Ä–æ—à–ª–æ–µ: –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø–µ—Ä–≤–æ–π –∫–∞—Ä—Ç—ã –∏ –µ—ë –≤–ª–∏—è–Ω–∏—è –Ω–∞ —Å–∏—Ç—É–∞—Ü–∏—é (3-4 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)
3. –ù–∞—Å—Ç–æ—è—â–µ–µ: –≥–ª—É–±–æ–∫–æ–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ –≤—Ç–æ—Ä–æ–π –∫–∞—Ä—Ç—ã –∏ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è (3-4 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)
4. –ë—É–¥—É—â–µ–µ: –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç—Ä–µ—Ç—å–µ–π –∫–∞—Ä—Ç—ã –∏ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤ (3-4 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)
5. –°–≤—è–∑—å –º–µ–∂–¥—É –∫–∞—Ä—Ç–∞–º–∏: –∫–∞–∫ –æ–Ω–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É—é—Ç –∏ –¥–æ–ø–æ–ª–Ω—è—é—Ç –¥—Ä—É–≥ –¥—Ä—É–≥–∞ (2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)
6. –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏: –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —à–∞–≥–∏ –∏ –¥–µ–π—Å—Ç–≤–∏—è (3-4 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)
7. –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏: —á—Ç–æ –≤–∞–∂–Ω–æ —É—á–µ—Å—Ç—å (2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)

–ü—Ä–∞–≤–∏–ª–∞:
- –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—á–µ–Ω—å –æ–±—ä—ë–º–Ω—ã–º (20-25 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –º–∏–Ω–∏–º—É–º)
- –°–≤—è–∂–∏ –∫–∞—Ä—Ç—ã –≤ –µ–¥–∏–Ω—É—é –ª–æ–≥–∏—á–µ—Å–∫—É—é –∏—Å—Ç–æ—Ä–∏—é —Å –≥–ª—É–±–æ–∫–∏–º –∞–Ω–∞–ª–∏–∑–æ–º
- –î–∞–≤–∞–π –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã
- –ò—Å–ø–æ–ª—å–∑—É–π –∂–∏–≤–æ–π, –ø–æ–Ω—è—Ç–Ω—ã–π —è–∑—ã–∫ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏
- –ü–∏—à–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
- –ë—É–¥—å –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–º, –Ω–æ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–º
- –£—á–∏—Ç—ã–≤–∞–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞ –∫–ª–∏–µ–Ω—Ç–∞, –µ—Å–ª–∏ –æ–Ω –∑–∞–¥–∞–Ω
- –î–æ–±–∞–≤–ª—è–π –¥–µ—Ç–∞–ª–∏ –∏ –Ω—é–∞–Ω—Å—ã –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –ø–æ–Ω–∏–º–∞–Ω–∏—è —Å–∏—Ç—É–∞—Ü–∏–∏`;
            const completion = await openai.chat.completions.create({
                model: 'gpt-4o-mini',
                messages: [
                    {
                        role: 'system',
                        content: '–¢—ã –æ–ø—ã—Ç–Ω—ã–π —Ç–∞—Ä–æ–ª–æ–≥ —Å –º–Ω–æ–≥–æ–ª–µ—Ç–Ω–µ–π –ø—Ä–∞–∫—Ç–∏–∫–æ–π, –∫–æ—Ç–æ—Ä—ã–π –¥–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—ã–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è —Ä–∞—Å–∫–ª–∞–¥–æ–≤. –ì–æ–≤–æ—Ä–∏ –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Ü–∞, –∫–∞–∫ –∂–∏–≤–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç. –°–≤—è–∑—ã–≤–∞–π –∫–∞—Ä—Ç—ã –≤ –µ–¥–∏–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é –∏ –¥–∞–≤–∞–π –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã.'
                    },
                    {
                        role: 'user',
                        content: prompt
                    }
                ],
                temperature: 0.8,
                max_tokens: 1500
            });
            console.log('OpenAI three cards API call completed successfully');
            const response = completion.choices[0]?.message?.content;
            if (!response) {
                throw new Error('–ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç OpenAI');
            }
            const interpretation = response.trim();
            console.log(`OpenAI generated three cards interpretation: ${interpretation}`);
            return { interpretation };
        }
        catch (error) {
            console.error('OpenAI three cards interpretation error:', error);
            console.error('Error details:', {
                name: error.name,
                message: error.message,
                status: error.status,
                code: error.code,
                type: error.type
            });
            // –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –Ω–∞–≤–µ—Ä—Ö –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
            throw error;
        }
    }
}
exports.OpenAIService = OpenAIService;
//# sourceMappingURL=openai.js.map