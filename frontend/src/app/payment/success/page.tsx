'use client';

import { useEffect, useState, Suspense } from 'react';
import { useSearchParams, useRouter } from 'next/navigation';
import { motion } from 'framer-motion';
import { CheckCircle2, XCircle, Loader2 } from 'lucide-react';
import { Button } from '@/components/ui/Button';
import { getApiEndpoint } from '@/utils/config';
import { getValidAuthToken } from '@/utils/auth';

function PaymentSuccessContent() {
  const searchParams = useSearchParams();
  const router = useRouter();
  const [status, setStatus] = useState<'checking' | 'success' | 'error'>('checking');
  const [message, setMessage] = useState('–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞...');
  const [debugInfo, setDebugInfo] = useState<string>('');

  useEffect(() => {
    const checkPaymentStatus = async () => {
      try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –±—ã–ª–∞ –ª–∏ –æ—Ç–º–µ–Ω–∞ –ø–ª–∞—Ç–µ–∂–∞
        const isCancelled = searchParams?.get('cancel') === 'true' || 
                           searchParams?.get('cancelled') === 'true' ||
                           searchParams?.get('status') === 'cancelled';
        
        if (isCancelled) {
          console.log('‚ùå Payment was cancelled');
          setStatus('error');
          setMessage('–ü–ª–∞—Ç–µ–∂ –±—ã–ª –æ—Ç–º–µ–Ω–µ–Ω. –í—ã –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –æ–±—Ä–∞—Ç–Ω–æ –≤ Telegram –±–æ—Ç–∞.');
          
          // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –æ–±—Ä–∞—Ç–Ω–æ –≤ Telegram –±–æ—Ç–∞ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
          setTimeout(() => {
            if (typeof window !== 'undefined' && (window as any).Telegram?.WebApp) {
              (window as any).Telegram.WebApp.close();
            } else {
              router.push('/');
            }
          }, 3000);
          return;
        }
        
        // –ü–æ–ª—É—á–∞–µ–º ID –ø–ª–∞—Ç–µ–∂–∞ –∏–∑ URL –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
        // YooKassa –º–æ–∂–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö
        const paymentId = searchParams?.get('paymentId') || 
                         searchParams?.get('payment_id') ||
                         searchParams?.get('orderId') ||
                         searchParams?.get('order_id');
        
        const urlParams = {
          paymentId: searchParams?.get('paymentId'),
          payment_id: searchParams?.get('payment_id'),
          orderId: searchParams?.get('orderId'),
          order_id: searchParams?.get('order_id'),
          cancel: searchParams?.get('cancel'),
          cancelled: searchParams?.get('cancelled'),
          status: searchParams?.get('status'),
          all: Array.from(searchParams?.entries() || [])
        };
        
        console.log('üîç URL search params:', urlParams);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º URL –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
        setDebugInfo(`URL –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: ${JSON.stringify(urlParams, null, 2)}`);
        
        if (!paymentId) {
          console.error('Payment ID not found in URL');
          setStatus('error');
          setMessage('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å ID –ø–ª–∞—Ç–µ–∂–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –≤ –ø—Ä–æ—Ñ–∏–ª–µ.');
          return;
        }

        console.log('‚úÖ Payment ID:', paymentId);
        console.log('üîç Checking payment status...');

        // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        const token = await getValidAuthToken();
        if (!token) {
          console.error('Auth token not available');
          setStatus('error');
          setMessage('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.');
          return;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞ —á–µ—Ä–µ–∑ backend
        const endpoint = getApiEndpoint(`/payment/status/${paymentId}`);
        console.log('üåê Requesting payment status from:', endpoint);

        const response = await fetch(endpoint, {
          method: 'GET',
          headers: {
            'Authorization': `Bearer ${token}`,
            'Content-Type': 'application/json'
          }
        });

        console.log('üì° Response status:', response.status);

        if (!response.ok) {
          throw new Error(`Failed to check payment status: ${response.status}`);
        }

        const data = await response.json();
        console.log('üìä Payment status data:', data);

        if (data.success && data.payment?.paid) {
          setStatus('success');
          setMessage('–û–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞.');
          
          // –ß–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
          setTimeout(() => {
            if (typeof window !== 'undefined' && (window as any).Telegram?.WebApp) {
              (window as any).Telegram.WebApp.close();
            } else {
              router.push('/');
            }
          }, 3000);
        } else if (data.payment?.status === 'pending') {
          setStatus('checking');
          setMessage('–ü–ª–∞—Ç—ë–∂ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...');
          
          // –ü–æ–≤—Ç–æ—Ä—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
          setTimeout(checkPaymentStatus, 2000);
        } else {
          setStatus('error');
          setMessage('–ü–ª–∞—Ç—ë–∂ –Ω–µ –∑–∞–≤–µ—Ä—à—ë–Ω. –ï—Å–ª–∏ –¥–µ–Ω—å–≥–∏ —Å–ø–∏—Å–∞–ª–∏—Å—å, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.');
        }
      } catch (error) {
        console.error('Error checking payment status:', error);
        setStatus('error');
        setMessage('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –≤ –ø—Ä–æ—Ñ–∏–ª–µ.');
      }
    };

    checkPaymentStatus();
  }, [searchParams, router]);

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 flex items-center justify-center p-4">
      <motion.div
        className="bg-slate-800/50 backdrop-blur-sm rounded-2xl p-8 max-w-md w-full border border-slate-600/30 shadow-2xl"
        initial={{ scale: 0.9, opacity: 0 }}
        animate={{ scale: 1, opacity: 1 }}
        transition={{ duration: 0.3 }}
      >
        <div className="flex flex-col items-center space-y-6">
          {/* Icon */}
          {status === 'checking' && (
            <motion.div
              animate={{ rotate: 360 }}
              transition={{ duration: 1, repeat: Infinity, ease: 'linear' }}
            >
              <Loader2 className="w-16 h-16 text-amber-400" />
            </motion.div>
          )}
          
          {status === 'success' && (
            <motion.div
              initial={{ scale: 0 }}
              animate={{ scale: 1 }}
              transition={{ type: 'spring', stiffness: 200, damping: 10 }}
            >
              <CheckCircle2 className="w-16 h-16 text-green-400" />
            </motion.div>
          )}
          
          {status === 'error' && (
            <motion.div
              initial={{ scale: 0 }}
              animate={{ scale: 1 }}
              transition={{ type: 'spring', stiffness: 200, damping: 10 }}
            >
              <XCircle className="w-16 h-16 text-red-400" />
            </motion.div>
          )}

          {/* Title */}
          <h1 className="text-2xl font-bold text-white text-center">
            {status === 'checking' && '–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–ª–∞—Ç—ë–∂...'}
            {status === 'success' && '–£—Å–ø–µ—à–Ω–æ!'}
            {status === 'error' && '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫'}
          </h1>

          {/* Message */}
          <p className="text-gray-300 text-center">
            {message}
          </p>

          {/* Debug Info */}
          {debugInfo && (
            <div className="mt-4 p-4 bg-black/20 rounded-lg">
              <h3 className="text-white text-sm font-semibold mb-2">üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:</h3>
              <pre className="text-xs text-gray-300 whitespace-pre-wrap break-all">
                {debugInfo}
              </pre>
            </div>
          )}

          {/* Button */}
          {status !== 'checking' && (
            <Button
              onClick={() => {
                if (typeof window !== 'undefined' && (window as any).Telegram?.WebApp) {
                  (window as any).Telegram.WebApp.close();
                } else {
                  router.push('/');
                }
              }}
              className="w-full px-6 py-3 bg-gradient-to-r from-amber-600 to-amber-500 hover:from-amber-700 hover:to-amber-600 text-white rounded-xl font-medium transition-all duration-300"
            >
              –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
            </Button>
          )}
        </div>
      </motion.div>
    </div>
  );
}

function LoadingFallback() {
  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 flex items-center justify-center p-4">
      <motion.div
        className="bg-slate-800/50 backdrop-blur-sm rounded-2xl p-8 max-w-md w-full border border-slate-600/30 shadow-2xl"
        initial={{ scale: 0.9, opacity: 0 }}
        animate={{ scale: 1, opacity: 1 }}
        transition={{ duration: 0.3 }}
      >
        <div className="flex flex-col items-center space-y-6">
          <motion.div
            animate={{ rotate: 360 }}
            transition={{ duration: 1, repeat: Infinity, ease: 'linear' }}
          >
            <Loader2 className="w-16 h-16 text-amber-400" />
          </motion.div>
          <h1 className="text-2xl font-bold text-white text-center">
            –ó–∞–≥—Ä—É–∑–∫–∞...
          </h1>
          <p className="text-gray-300 text-center">
            –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—ã
          </p>
        </div>
      </motion.div>
    </div>
  );
}

export default function PaymentSuccess() {
  return (
    <Suspense fallback={<LoadingFallback />}>
      <PaymentSuccessContent />
    </Suspense>
  );
}

